
/* fetch()の仕組みとPromiseについて ------------------------------------------------------------------------------------------*/

  // fetch(url)
  //fetch() に対して URL を渡せば、この URL に書かれたデータを取得してくれる。
  //fetch() 自体が非同期処理であり、これが実行された時点でバックグラウンドで通信が開始されるという仕組み.


  // Promise
  //そのバックグラウンドで行われる非同期処理が今どういう状態なのかは、fetch() の返り値で知ることができるので、例えばこの URL へのリクエストに対するレスポンスという意味で、定数に格納することもできる。
  //この返り値ですが Promise と呼ばれる種類のオブジェクトで、非同期処理の状態に応じて値が変わる、特殊なオブジェクトになっている。
  // pending
  //具体的には非同期処理が始まった時点では、Pending という状態
  // Fulfilled
  //そして、そのあとに非同期処理が完了すると、その結果によって 2 つの状態に変化するのですが、処理がうまくいったら Fulfilled という状態
  // Rejected
  //非同期処理が何らかのエラーでうまくいかなかった場合、Rejected という状態


/* ----------------------------------------------------------------------------------------------------------------------------------------------*/

/* fetch()の仕組みとPromiseについて ------------------------------------------------------------------------------------------*/

  function showHeader() {
    console.log('Header');

  }

  function showUsers() {
    console.log('Users');

  }

  function showFooter() {
    console.log('Footer');

  }

  showHeader();
  showUsers();
  showFooter();



/* ----------------------------------------------------------------------------------------------------------------------------------------------*/
